buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'GuestBook'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8


tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}

repositories {
    mavenCentral()
}

dependencies {
    //compile('org.springframework.boot:spring-boot-starter-security')
    
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compile('com.googlecode.json-simple:json-simple:1.1')
    
    
    
   	// for database
    compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.mybatis:mybatis:3.3.0')
	compile('org.mybatis:mybatis-spring:1.2.3')
	runtime('mysql:mysql-connector-java')
    
    // for jsp
    runtime('org.apache.tomcat.embed:tomcat-embed-jasper')
    runtime('javax.servlet:jstl:1.2')
    
    
    testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
